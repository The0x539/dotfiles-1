#!/usr/local/bin/python
# encoding: utf-8
import os
import psutil
import sys
import time

def sizeof_fmt(num, suffix='B'):
    for unit in ['','Ki','Mi','Gi','Ti','Pi','Ei','Zi']:
        if abs(num) < 1024.0:
            return "%3.2f%s%s" % (num, unit, suffix)
        num /= 1024.0
    return "%.2f%s%s" % (num, 'Yi', suffix)

def secs2hours(secs):
    mm, ss = divmod(secs, 60)
    hh, mm = divmod(mm, 60)
    return "%d:%02d:%02d" % (hh, mm, ss)


battery_timeleft = secs2hours(psutil.sensors_battery().secsleft)

disk_usage = psutil.disk_usage('/')
disk_free_human = sizeof_fmt(disk_usage.free)

process_count = len(psutil.pids())
output = []

everything = False

if "cpu" in sys.argv or everything:
    all_cpu_percent = psutil.cpu_percent(interval=1, percpu=True)
    cpu_percent = max(all_cpu_percent)
    print("CPU: " + str(cpu_percent) + "%")
    print("PROC: " + str(process_count))


if "ram" in sys.argv or everything:
    memory = psutil.virtual_memory()
    print("RAM: " + str(int(memory.percent)) + "%")
    print(sizeof_fmt(memory.used))


if "battery" in sys.argv or everything:
    battery = psutil.sensors_battery()
    battery_timeleft = secs2hours(battery.secsleft)
    print(u"BAT: " + str(battery.percent) + "%")
    print("Charging" if battery.power_plugged else "Draining")



if "disk" in sys.argv or everything:
    disk_usage = psutil.disk_usage('/')
    print("SSD: " + str(disk_usage.percent) + "%")
    print(sizeof_fmt(disk_usage.used))

if "time" in sys.argv or everything:
    print(time.strftime('%X\n %x'))
    
